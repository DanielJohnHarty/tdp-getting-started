---

# TDP
realm: REALM.TDP
num_vagrant_processes: 7

# Ranger
ranger_admin_password: RangerAdmin123

# Kerberos
kadmin_principal: admin/admin
kadmin_password: admin
kadmind_server: "{{ groups['kdc'][0] | tosit.tdp.access_fqdn(hostvars) }}"
kdc_server: "{{ groups['kdc'][0] | tosit.tdp.access_fqdn(hostvars) }} "

# Rename for ansible-kerberos-client and ansible-kerberos-server
realm_name: "{{ realm }}"
master_db_pass: krb5-master-pass
kadmin_user: "{{ kadmin_principal }}"
kadmin_pass: "{{ kadmin_password }}"
kdc_port: 88

# oozie
oozie_user: oozie

# CA
ca_cert_filename: root.pem

POLICY_MGR_URL: "https://{{ groups['ranger_admin'][0] | tosit.tdp.access_fqdn(hostvars) }}:6182"

# hdfs
hdfs_user: hdfs
ranger_hdfs_install_properties:
  POLICY_MGR_URL: "{{ POLICY_MGR_URL }}"
  REPOSITORY_NAME: hdfs-tdp

# hive
ranger_hive_install_properties:
  POLICY_MGR_URL: "{{ POLICY_MGR_URL }}"
  REPOSITORY_NAME: hive-tdp

# Spark
spark_defaults:
  spark.eventLog.dir: hdfs://mycluster/spark-logs
  spark.history.fs.logDirectory: hdfs://mycluster/spark-logs
  spark-yarn-historyServer: "{{ groups['kdc'][0] | tosit.tdp.access_fqdn(hostvars) }}:18081"
hadoop_root_dir: /opt/tdp
hadoop_root_conf_dir: /etc/hadoop

# yarn
ranger_yarn_install_properties:
  POLICY_MGR_URL: "{{ POLICY_MGR_URL }}"
  REPOSITORY_NAME: yarn-tdp

yarn_site:
  # To enable Kerberos on the ATS UI
  yarn.timeline-service.http-authentication.type: kerberos
  yarn.timeline-service.http-authentication.kerberos.principal: HTTP/_HOST@{{ realm }}
  yarn.timeline-service.http-authentication.kerberos.keytab: /etc/security/keytabs/spnego.service.keytab

# Zookeeper
hadoop_ha_zookeeper_quorum: "{{groups['zk'] | map('extract', hostvars, ['ansible_host']) | map('regex_replace', '^(.*)$', '\\1:2181') | join(',') }}"

# User management
users:
  - username: tdp_user
    password: tdp_user123
  - username: smoke_user
    password: smoke_user123

# Depends on hdfs service 
user_hdfs_policies:
  - name: tdp_user-hdfs-home-policy
    description: tdp_user access to hdfs:////user/tdp_user
    isAuditEnabled: true
    isEnabled: true
    policyItems:
    - accesses:
      - {isAllowed: true, type: read}
      - {isAllowed: true, type: write}
      - {isAllowed: true, type: execute}
      conditions: []
      delegateAdmin: true
      groups: []
      users: [tdp_user]
    repositoryType: hdfs
    resources:
      path:
        isExcludes: false
        isRecursive: true
        values: ['hdfs:////user/tdp_user']
    service: hdfs-tdp
  - name: smoke_user-hdfs-home-policy
    description: smoke_user access to hdfs:////user/smoke_user
    isAuditEnabled: true
    isEnabled: true
    policyItems:
    - accesses:
      - {isAllowed: true, type: read}
      - {isAllowed: true, type: write}
      - {isAllowed: true, type: execute}
      conditions: []
      delegateAdmin: true
      groups: []
      users: [smoke_user]
    repositoryType: hdfs
    resources:
      path:
        isExcludes: false
        isRecursive: true
        values: ['hdfs:////user/smoke_user']
    service: hdfs-tdp

# Depends on hdfs service (hive policies )
oozie_hdfs_policies:
  - name: oozie-hdfs-user-dir-policy
    description: Necessary oozie access to hdfs:////user
    isAuditEnabled: true
    isEnabled: true
    policyItems:
    - accesses:
      - {isAllowed: true, type: read}
      - {isAllowed: true, type: write}
      - {isAllowed: true, type: execute}
      conditions: []
      delegateAdmin: true
      groups: []
      users: ["{{oozie_user}}"]
    repositoryType: hdfs
    resources:
      path:
        isExcludes: false
        isRecursive: true
        values: ["/user"]
    service: hdfs-tdp

# Depends on hive service
user_hive_policies:
  - name: tdp-user-hive-policy
    description: Hive Client Check
    service: hive-tdp
    repositoryType: hive
    isAuditEnabled: true
    isEnabled: true
    resources:
      column:
        isExcludes: false
        values: ['*']
      database:
        isExcludes: false
        values: [tdp_user_db]
      table:
        isExcludes: false
        values: ['*']
    policyItems:
    - users: [tdp_user]
      groups: []
      delegateAdmin: true
      accesses:
      - {isAllowed: true, type: select}
      - {isAllowed: true, type: update}
      - {isAllowed: true, type: Create}
      - {isAllowed: true, type: Drop}
      - {isAllowed: true, type: Alter}
      - {isAllowed: true, type: Index}
      - {isAllowed: true, type: Lock}
      - {isAllowed: true, type: All}
      - {isAllowed: true, type: Read}
      - {isAllowed: true, type: Write}
      - {isAllowed: true, type: Refresh}
      conditions: []

